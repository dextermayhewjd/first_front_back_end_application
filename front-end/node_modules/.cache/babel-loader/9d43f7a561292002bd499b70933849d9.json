{"ast":null,"code":"var _jsxFileName = \"/Users/dingjiahua/github_projects/src/components/counter/Counter.jsx\";\nimport React, { Component } from \"react\";\nimport './Counter.css';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  constructor() {\n    super();\n\n    //when it is for a one-button-one-counter \n    this.state = {\n      counter: 0\n      // secondCounter : 100\n    };\n\n    this.increment = this.increment.bind(this);\n  }\n  increment(by) {\n    // console.log(`increment from parent - ${by}`)\n\n    this.setState(prevState => {\n      // define a arrow function to return counter back\n      return {\n        counter: prevState.counter + by\n      };\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 1,\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 5,\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 10,\n        incrementMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\",\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass CounterButton extends Component {\n  // define the initial state in a constructor \n  //state => counter 0\n\n  constructor() {\n    super();\n\n    //when it is for a one-button-one-counter \n    this.state = {\n      counter: 0\n      // secondCounter : 100\n    };\n\n    this.increment = this.increment.bind(this);\n  }\n  render() {\n    // let style = {fontSize:\"50px\",padding: \"15px 30px\"}\n    // let make style a block scope variable\n    // could be used in this way but I would better use in in css file\n    // const style = {fontSize:\"50px\",padding: \"15px 30px\"}\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: [\"+\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this);\n  }\n  increment() {\n    // update the state\n    // counter ++\n\n    this.setState({\n      counter: this.state.counter + this.props.by\n      // secondCounter:  this.state.secondCounter + 1\n    });\n\n    this.props.incrementMethod(this.props.by);\n  }\n}\nCounterButton.defaultProps = {\n  by: 1\n  // could assign default properies in this way\n};\n\nCounterButton.propTypes = {\n  by: propTypes.number\n  // could do the prop type check for you\n  // but it would only give warning but can still work in the original way\n};\n\nexport default Counter;","map":{"version":3,"names":["React","Component","propTypes","Counter","constructor","state","counter","increment","bind","by","setState","prevState","render","CounterButton","props","incrementMethod","defaultProps","number"],"sources":["/Users/dingjiahua/github_projects/src/components/counter/Counter.jsx"],"sourcesContent":["import React, { Component } from \"react\"\nimport './Counter.css'\nimport propTypes from 'prop-types'\n\n\nclass Counter extends Component{\n \n  constructor(){\n    super();\n   \n    //when it is for a one-button-one-counter \n    this.state = {\n      counter : 0,\n      // secondCounter : 100\n    }\n\n    this.increment = this.increment.bind(this)\n  }\n\n  increment(by){ \n    // console.log(`increment from parent - ${by}`)\n\n    this.setState(\n      (prevState) => {\n        // define a arrow function to return counter back\n        return {counter: prevState.counter + by} \n      }\n      )\n\n}\n \n \n  render() {\n    return (\n      <div className=\"counter\">\n      {/* <LearningComponents></LearningComponents> */}\n      <CounterButton by ={1} incrementMethod={this.increment}/>\n      {/* could use COounter by = \"1\" in this case 1 would be string instead of value */}\n      {/* only using this {}way could assign a integer value to it */}\n      <CounterButton by ={5} incrementMethod={this.increment}/>\n      <CounterButton by ={10} incrementMethod={this.increment}/>\n      <span className=\"count\">{this.state.counter}</span>\n      </div>\n    );\n  }\n}\n\nclass CounterButton extends Component{\n  \n  // define the initial state in a constructor \n  //state => counter 0\n  \n  constructor(){\n    super();\n   \n    //when it is for a one-button-one-counter \n    this.state = {\n      counter : 0,\n      // secondCounter : 100\n    }\n\n    this.increment = this.increment.bind(this)\n  }\n\n\n  render(){\n    // let style = {fontSize:\"50px\",padding: \"15px 30px\"}\n    // let make style a block scope variable\n    // could be used in this way but I would better use in in css file\n    // const style = {fontSize:\"50px\",padding: \"15px 30px\"}\n  return(\n    <div className=\"counter\">\n      {/* <button onclick={someJSMethodCall()}>+1</button> */}\n      <button onClick={this.increment}>+{this.props.by}</button>\n      {/* <span className=\"count\" */}\n      {/* //define inline javascript css in jsx */}\n      {/* // style={style} */}\n      {/* > */}\n        {/* {this.state.counter}</span> */}\n      {/* <span className=\"count\">{this.state.secondCounter}</span> */}\n\n    </div>\n    )\n  }\n\n increment(){ // update the state\n              // counter ++\n\n  this.setState({\n    counter: this.state.counter + this.props.by ,\n    // secondCounter:  this.state.secondCounter + 1\n });\n  this.props.incrementMethod(this.props.by);\n }\n\n}\n\nCounterButton.defaultProps = {\n  by : 1\n  // could assign default properies in this way\n}\n\nCounterButton.propTypes = {\n  by : propTypes.number\n  // could do the prop type check for you\n  // but it would only give warning but can still work in the original way\n}\n\nexport default Counter"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,eAAe;AACtB,OAAOC,SAAS,MAAM,YAAY;AAAA;AAGlC,MAAMC,OAAO,SAASF,SAAS;EAE7BG,WAAW,GAAE;IACX,KAAK,EAAE;;IAEP;IACA,IAAI,CAACC,KAAK,GAAG;MACXC,OAAO,EAAG;MACV;IACF,CAAC;;IAED,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5C;EAEAD,SAAS,CAACE,EAAE,EAAC;IACX;;IAEA,IAAI,CAACC,QAAQ,CACVC,SAAS,IAAK;MACb;MACA,OAAO;QAACL,OAAO,EAAEK,SAAS,CAACL,OAAO,GAAGG;MAAE,CAAC;IAC1C,CAAC,CACA;EAEP;EAGEG,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,SAAS;MAAA,wBAExB,QAAC,aAAa;QAAC,EAAE,EAAG,CAAE;QAAC,eAAe,EAAE,IAAI,CAACL;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,eAGzD,QAAC,aAAa;QAAC,EAAE,EAAG,CAAE;QAAC,eAAe,EAAE,IAAI,CAACA;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,eACzD,QAAC,aAAa;QAAC,EAAE,EAAG,EAAG;QAAC,eAAe,EAAE,IAAI,CAACA;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,eAC1D;QAAM,SAAS,EAAC,OAAO;QAAA,UAAE,IAAI,CAACF,KAAK,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7C;EAEV;AACF;AAEA,MAAMO,aAAa,SAASZ,SAAS;EAEnC;EACA;;EAEAG,WAAW,GAAE;IACX,KAAK,EAAE;;IAEP;IACA,IAAI,CAACC,KAAK,GAAG;MACXC,OAAO,EAAG;MACV;IACF,CAAC;;IAED,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5C;EAGAI,MAAM,GAAE;IACN;IACA;IACA;IACA;IACF,oBACE;MAAK,SAAS,EAAC,SAAS;MAAA,uBAEtB;QAAQ,OAAO,EAAE,IAAI,CAACL,SAAU;QAAA,gBAAG,IAAI,CAACO,KAAK,CAACL,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QAQtD;EAER;EAEDF,SAAS,GAAE;IAAE;IACA;;IAEZ,IAAI,CAACG,QAAQ,CAAC;MACZJ,OAAO,EAAE,IAAI,CAACD,KAAK,CAACC,OAAO,GAAG,IAAI,CAACQ,KAAK,CAACL;MACzC;IACH,CAAC,CAAC;;IACD,IAAI,CAACK,KAAK,CAACC,eAAe,CAAC,IAAI,CAACD,KAAK,CAACL,EAAE,CAAC;EAC1C;AAED;AAEAI,aAAa,CAACG,YAAY,GAAG;EAC3BP,EAAE,EAAG;EACL;AACF,CAAC;;AAEDI,aAAa,CAACX,SAAS,GAAG;EACxBO,EAAE,EAAGP,SAAS,CAACe;EACf;EACA;AACF,CAAC;;AAED,eAAed,OAAO"},"metadata":{},"sourceType":"module"}