{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\d1029\\\\Documents\\\\full_stack\\\\todo-app\\\\first_front_back_end_application\\\\front-end\\\\src\\\\components\\\\todo\\\\TodoComponent.jsx\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { ErrorMessage, Field, Formik } from \"formik\";\nimport { Form } from \"formik\";\nimport TodoDataService from \"../../api/todo/TodoDataService\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TodosComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.params.id,\n      description: 'Learn Forms Now',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n  componentDidMount() {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveTodo(username, this.state.id);\n  }\n  onSubmit(values) {\n    console.log(values);\n  }\n  validate(values) {\n    let errors = {};\n    if (!values.description) {\n      errors.description = 'Enter a Description';\n    } else if (values.description.length < 5) {\n      errors = {\n        description: 'Should have at least 5 Characters'\n      };\n    }\n    if (!moment(values.targetDate).isValid()) {\n      errors.targetDate = ' Enter a valid Target Date ';\n    }\n    return errors;\n  }\n  render() {\n    // let description = this.state.description\n    // let targetDate = this.state.targetDate\n    // a simple way to define\n    let {\n      description,\n      targetDate\n    } = this.state;\n    //let test = {a:'1',b:'2',c:'3'}\n    //let {a,b,c} = test\n    //this is called restructuring\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        classname: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            // description : description,\n            // tagetDate : targetDate\n            // if the key has the same name as the value \n            // don't have to type it twice\n            description,\n            targetDate\n          },\n          onSubmit: this.onSubmit,\n          validateOnBlur: false,\n          validateOnChange: false,\n          validate: this.validate,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"targetDate\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"date\",\n                name: \"targetDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              classname: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default TodosComponent;","map":{"version":3,"names":["React","Component","moment","ErrorMessage","Field","Formik","Form","TodoDataService","AuthenticationService","TodosComponent","constructor","props","state","id","params","description","targetDate","Date","format","onSubmit","bind","validate","componentDidMount","username","getLoggedInUserName","retrieveTodo","values","console","log","errors","length","isValid","render"],"sources":["C:/Users/d1029/Documents/full_stack/todo-app/first_front_back_end_application/front-end/src/components/todo/TodoComponent.jsx"],"sourcesContent":["import React,{Component} from \"react\";\r\nimport moment from \"moment\";\r\nimport { ErrorMessage, Field, Formik } from \"formik\";\r\nimport { Form } from \"formik\"\r\nimport TodoDataService from \"../../api/todo/TodoDataService\";\r\nimport AuthenticationService from \"./AuthenticationService\"\r\nclass TodosComponent extends Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n       \r\n        this.state = {\r\n            id : this.props.params.id,\r\n            description : 'Learn Forms Now',\r\n            targetDate : moment(new Date()).format('YYYY-MM-DD')\r\n        }\r\n        \r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        TodoDataService.retrieveTodo(username,this.state.id)\r\n    }\r\n\r\n    onSubmit(values){\r\n            console.log(values);\r\n        }\r\n    validate(values){\r\n        let errors = {}\r\n        if(!values.description){\r\n            errors.description = 'Enter a Description'\r\n        }else if(values.description.length<5){\r\n            errors={description:'Should have at least 5 Characters'}\r\n        }\r\n\r\n        if(!moment(values.targetDate).isValid()){\r\n            errors.targetDate = ' Enter a valid Target Date '\r\n        }\r\n        return errors\r\n    }\r\n    render(){\r\n        // let description = this.state.description\r\n        // let targetDate = this.state.targetDate\r\n        // a simple way to define\r\n        let {description,targetDate} = this.state\r\n        //let test = {a:'1',b:'2',c:'3'}\r\n        //let {a,b,c} = test\r\n        //this is called restructuring\r\n        \r\n        return (\r\n        <div>\r\n            <h1>Todo</h1>\r\n            <div classname= \"container\">\r\n                <Formik\r\n                    initialValues = {\r\n                        {\r\n                            // description : description,\r\n                            // tagetDate : targetDate\r\n                            // if the key has the same name as the value \r\n                            // don't have to type it twice\r\n                            description,\r\n                            targetDate\r\n                        }\r\n                    }\r\n                    onSubmit = {this.onSubmit}\r\n                    validateOnBlur = {false}\r\n                    validateOnChange = {false}\r\n                    validate={this.validate}\r\n                \r\n                >\r\n                    {\r\n                        (props) => (\r\n                            <Form>\r\n                                <ErrorMessage name = \"description\" component=\"div\" \r\n                                                    className=\"alert alert-warning\"></ErrorMessage>\r\n                                <ErrorMessage name = \"targetDate\" component=\"div\" \r\n                                                    className=\"alert alert-warning\"></ErrorMessage>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Description</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"description\"></Field>                                  \r\n                                </fieldset>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Target Date</label>\r\n                                    <Field className=\"form-control\" type=\"date\" name=\"targetDate\" ></Field>                                  \r\n                                </fieldset>\r\n                                <button classname=\"btn btn-success\" type=\"submit\">Save</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\nexport default TodosComponent"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAQ,QAAQ;AACpD,SAASC,IAAI,QAAQ,QAAQ;AAC7B,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,OAAOC,qBAAqB,MAAM,yBAAyB;AAAA;AAC3D,MAAMC,cAAc,SAASR,SAAS;EAElCS,WAAW,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,EAAE,EAAG,IAAI,CAACF,KAAK,CAACG,MAAM,CAACD,EAAE;MACzBE,WAAW,EAAG,iBAAiB;MAC/BC,UAAU,EAAGd,MAAM,CAAC,IAAIe,IAAI,EAAE,CAAC,CAACC,MAAM,CAAC,YAAY;IACvD,CAAC;IAED,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACD,IAAI,CAAC,IAAI,CAAC;EAE5C;EAEAE,iBAAiB,GAAE;IACf,IAAIC,QAAQ,GAAGf,qBAAqB,CAACgB,mBAAmB,EAAE;IAC1DjB,eAAe,CAACkB,YAAY,CAACF,QAAQ,EAAC,IAAI,CAACX,KAAK,CAACC,EAAE,CAAC;EACxD;EAEAM,QAAQ,CAACO,MAAM,EAAC;IACRC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACvB;EACJL,QAAQ,CAACK,MAAM,EAAC;IACZ,IAAIG,MAAM,GAAG,CAAC,CAAC;IACf,IAAG,CAACH,MAAM,CAACX,WAAW,EAAC;MACnBc,MAAM,CAACd,WAAW,GAAG,qBAAqB;IAC9C,CAAC,MAAK,IAAGW,MAAM,CAACX,WAAW,CAACe,MAAM,GAAC,CAAC,EAAC;MACjCD,MAAM,GAAC;QAACd,WAAW,EAAC;MAAmC,CAAC;IAC5D;IAEA,IAAG,CAACb,MAAM,CAACwB,MAAM,CAACV,UAAU,CAAC,CAACe,OAAO,EAAE,EAAC;MACpCF,MAAM,CAACb,UAAU,GAAG,6BAA6B;IACrD;IACA,OAAOa,MAAM;EACjB;EACAG,MAAM,GAAE;IACJ;IACA;IACA;IACA,IAAI;MAACjB,WAAW;MAACC;IAAU,CAAC,GAAG,IAAI,CAACJ,KAAK;IACzC;IACA;IACA;;IAEA,oBACA;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACb;QAAK,SAAS,EAAE,WAAW;QAAA,uBACvB,QAAC,MAAM;UACH,aAAa,EACT;YACI;YACA;YACA;YACA;YACAG,WAAW;YACXC;UACJ,CACH;UACD,QAAQ,EAAI,IAAI,CAACG,QAAS;UAC1B,cAAc,EAAI,KAAM;UACxB,gBAAgB,EAAI,KAAM;UAC1B,QAAQ,EAAE,IAAI,CAACE,QAAS;UAAA,UAInBV,KAAK,iBACF,QAAC,IAAI;YAAA,wBACD,QAAC,YAAY;cAAC,IAAI,EAAG,aAAa;cAAC,SAAS,EAAC,KAAK;cAC9B,SAAS,EAAC;YAAqB;cAAA;cAAA;cAAA;YAAA,QAAgB,eACnE,QAAC,YAAY;cAAC,IAAI,EAAG,YAAY;cAAC,SAAS,EAAC,KAAK;cAC7B,SAAS,EAAC;YAAqB;cAAA;cAAA;cAAA;YAAA,QAAgB,eACnE;cAAU,SAAS,EAAC,YAAY;cAAA,wBAC5B;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAA0B,eAC1B,QAAC,KAAK;gBAAC,SAAS,EAAC,cAAc;gBAAC,IAAI,EAAC,MAAM;gBAAC,IAAI,EAAC;cAAa;gBAAA;gBAAA;gBAAA;cAAA,QAAS;YAAA;cAAA;cAAA;cAAA;YAAA,QAChE,eACX;cAAU,SAAS,EAAC,YAAY;cAAA,wBAC5B;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAA0B,eAC1B,QAAC,KAAK;gBAAC,SAAS,EAAC,cAAc;gBAAC,IAAI,EAAC,MAAM;gBAAC,IAAI,EAAC;cAAY;gBAAA;gBAAA;gBAAA;cAAA,QAAU;YAAA;cAAA;cAAA;cAAA;YAAA,QAChE,eACX;cAAQ,SAAS,EAAC,iBAAiB;cAAC,IAAI,EAAC,QAAQ;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAc;UAAA;YAAA;YAAA;YAAA;UAAA;QAEtE;UAAA;UAAA;UAAA;QAAA;MAEA;QAAA;QAAA;QAAA;MAAA,QACP;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EACV;AACJ;AACA,eAAeF,cAAc"},"metadata":{},"sourceType":"module"}