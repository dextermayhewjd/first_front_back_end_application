{"ast":null,"code":"var _jsxFileName = \"/Users/dingjiahua/github_projects/src/components/todo/LoginComponent.jsx\";\nimport React, { Component } from \"react\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LoginComponent extends Component {\n  // it is a controlled components because the state is insede the react component\n  // for update the last\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'DexterDing',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    // this.handlerUsernameChange = this.handlerUsernameChange.bind(this)\n    // this.handlerPasswordChange = this.handlerPasswordChange.bind(this)\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n  handleChange(event) {\n    console.log(event.target.name);\n    this.setState({\n      //key point for a general handler \n      [event.target.name]: event.target.value\n    });\n  }\n  // handlerUsernameChange(event){\n  //     console.log(event.target.value)\n  //     this.setState(\n  //         {\n  //         username:event.target.value\n  //          }\n  //     )\n  // }\n  // handlerPasswordChange(event){\n  //     console.log(event.target.value)\n  //     this.setState(\n  //         {\n  //         password:event.target.value\n  //          }\n  //     )\n  // }\n  loginClicked() {\n    //dexterding,Jam198522\n    // this in class function is a function to determine and change state \n    // based on the information that passed in \n    if (this.state.username === 'dexterding' && this.state.password === 'Jam198522') {\n      AuthenticationService.registerSuccessfullLogin(this.state.username, this.state.password);\n      this.props.navigate(`/welcome/${this.state.username}`);\n    } else {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n      console.log('Failed');\n    }\n    console.log(this.state);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: \"Invaild Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 47\n        }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Login Sucessful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 51\n        }, this), \"User Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn=sucess\",\n          onClick: this.loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default LoginComponent;","map":{"version":3,"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","console","log","target","name","setState","value","registerSuccessfullLogin","navigate","render"],"sources":["/Users/dingjiahua/github_projects/src/components/todo/LoginComponent.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport AuthenticationService from \"./AuthenticationService\";\n\nclass LoginComponent extends Component{\n    // it is a controlled components because the state is insede the react component\n    // for update the last\n    constructor(props){\n        super(props)\n        this.state={\n            username:'DexterDing',\n            password:'',\n            hasLoginFailed:false,\n            showSuccessMessage:false\n        \n        }\n        // this.handlerUsernameChange = this.handlerUsernameChange.bind(this)\n        // this.handlerPasswordChange = this.handlerPasswordChange.bind(this)\n        \n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event){\n        console.log(event.target.name);\n        this.setState(\n            {\n                //key point for a general handler \n                [event.target.name]\n                    :event.target.value\n            }\n        )\n    }\n    // handlerUsernameChange(event){\n    //     console.log(event.target.value)\n    //     this.setState(\n    //         {\n    //         username:event.target.value\n    //          }\n    //     )\n    // }\n    // handlerPasswordChange(event){\n    //     console.log(event.target.value)\n    //     this.setState(\n    //         {\n    //         password:event.target.value\n    //          }\n    //     )\n    // }\n    loginClicked(){\n        //dexterding,Jam198522\n        // this in class function is a function to determine and change state \n        // based on the information that passed in \n        if(this.state.username==='dexterding'&&this.state.password==='Jam198522')\n        {\n            AuthenticationService.registerSuccessfullLogin(this.state.username,this.state.password)\n            this.props.navigate(`/welcome/${this.state.username}`)\n        }\n        else{\n            this.setState({showSuccessMessage:false})\n            this.setState({hasLoginFailed:true})\n            console.log('Failed')\n        }\n        console.log(this.state)\n        \n    }\n    render(){\n        return(\n            <div>\n                {/* here are two function called with state's true or false boolen passed in \n                the ShowInvalidCredential and howLoginSuccessMessage are function written \n                ouside the task */}\n                <h1>Login</h1>\n                <div className=\"container\">\n                {/* <ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/> */}\n                {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invaild Credentials</div> }\n                {/* <ShowLoginSuccessMessage showSuccessMessage ={this.state.showSuccessMessage}/> */}\n                {this.state.showSuccessMessage && <div>Login Sucessful</div> }\n            User Name : <input type=\"text\" name=\"username\" value={this.state.username}onChange={this.handleChange}/>\n            Password: <input type=\"text\" name=\"password\"value={this.state.password}onChange={this.handleChange}/>\n            <button className=\"btn btn=sucess\"onClick={this.loginClicked}>Login</button>\n            </div>\n        </div>\n            )\n    }\n\n    \n\n}\n\nexport default LoginComponent"],"mappings":"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"},"metadata":{},"sourceType":"module"}