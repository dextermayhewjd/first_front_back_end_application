{"ast":null,"code":"var _jsxFileName = \"/Users/dingjiahua/github_projects/src/components/counter/Counter.jsx\";\nimport React, { Component } from \"react\";\nimport './Counter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  // define the initial state in a constructor \n  //state => counter 0\n\n  constructor() {\n    super();\n    this.state = {\n      counter: 0\n      // secondCounter : 100\n    };\n\n    this.increment = this.increment.bind(this);\n  }\n  render() {\n    // let style = {fontSize:\"50px\",padding: \"15px 30px\"}\n    // let make style a block scope variable\n    // could be used in this way but I would better use in in css file\n    const style = {\n      fontSize: \"50px\",\n      padding: \"15px 30px\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\"\n        //define inline javascript css in jsx\n        ,\n        style: style,\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this);\n  }\n  increment() {\n    // update the state\n    // counter ++\n\n    this.setState({\n      counter: this.state.counter + 1\n      // secondCounter:  this.state.secondCounter + 1\n    });\n  }\n}\n\nexport default Counter;","map":{"version":3,"names":["React","Component","Counter","constructor","state","counter","increment","bind","render","style","fontSize","padding","setState"],"sources":["/Users/dingjiahua/github_projects/src/components/counter/Counter.jsx"],"sourcesContent":["import React, { Component } from \"react\"\nimport './Counter.css'\nclass Counter extends Component{\n  \n  // define the initial state in a constructor \n  //state => counter 0\n  \n  constructor(){\n    super();\n   \n    this.state = {\n      counter : 0,\n      // secondCounter : 100\n    }\n\n    this.increment = this.increment.bind(this)\n  }\n\n\n  render(){\n    // let style = {fontSize:\"50px\",padding: \"15px 30px\"}\n    // let make style a block scope variable\n    // could be used in this way but I would better use in in css file\n    const style = {fontSize:\"50px\",padding: \"15px 30px\"}\n  return(\n    <div className=\"counter\">\n      {/* <button onclick={someJSMethodCall()}>+1</button> */}\n      <button onClick={this.increment}>+1</button>\n      <span className=\"count\"\n      //define inline javascript css in jsx\n      style={style}>\n        {this.state.counter}</span>\n      {/* <span className=\"count\">{this.state.secondCounter}</span> */}\n\n    </div>\n    )\n  }\n\n increment(){ // update the state\n              // counter ++\n\n  this.setState({\n    counter: this.state.counter+1 ,\n    // secondCounter:  this.state.secondCounter + 1\n });\n }\n}\nexport default Counter"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,eAAe;AAAA;AACtB,MAAMC,OAAO,SAASD,SAAS;EAE7B;EACA;;EAEAE,WAAW,GAAE;IACX,KAAK,EAAE;IAEP,IAAI,CAACC,KAAK,GAAG;MACXC,OAAO,EAAG;MACV;IACF,CAAC;;IAED,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5C;EAGAC,MAAM,GAAE;IACN;IACA;IACA;IACA,MAAMC,KAAK,GAAG;MAACC,QAAQ,EAAC,MAAM;MAACC,OAAO,EAAE;IAAW,CAAC;IACtD,oBACE;MAAK,SAAS,EAAC,SAAS;MAAA,wBAEtB;QAAQ,OAAO,EAAE,IAAI,CAACL,SAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY,eAC5C;QAAM,SAAS,EAAC;QAChB;QAAA;QACA,KAAK,EAAEG,KAAM;QAAA,UACV,IAAI,CAACL,KAAK,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzB;EAER;EAEDC,SAAS,GAAE;IAAE;IACA;;IAEZ,IAAI,CAACM,QAAQ,CAAC;MACZP,OAAO,EAAE,IAAI,CAACD,KAAK,CAACC,OAAO,GAAC;MAC5B;IACH,CAAC,CAAC;EACF;AACD;;AACA,eAAeH,OAAO"},"metadata":{},"sourceType":"module"}