{"ast":null,"code":"class AuthenticationService {\n  registerSuccessfullLogin(username, password) {\n    //data stored in localStorage has no expiration time \n    //data stored in sessionStorage gets cleared when the page seesion ends\n    sessionStorage.setItem('authenticatedUser', username);\n  }\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\nexport default new AuthenticationService();","map":{"version":3,"names":["AuthenticationService","registerSuccessfullLogin","username","password","sessionStorage","setItem","logout","removeItem","isUserLoggedIn","user","getItem"],"sources":["/Users/dingjiahua/github_projects/front-end/src/components/todo/AuthenticationService.js"],"sourcesContent":["class AuthenticationService{\n    registerSuccessfullLogin(username,password){\n        //data stored in localStorage has no expiration time \n        //data stored in sessionStorage gets cleared when the page seesion ends\n        sessionStorage.setItem('authenticatedUser',username);\n    }\n    logout(){\n        sessionStorage.removeItem('authenticatedUser')\n    }\n    isUserLoggedIn(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null){return false}\n        else{return true}\n    }\n}\nexport default new AuthenticationService()"],"mappings":"AAAA,MAAMA,qBAAqB;EACvBC,wBAAwB,CAACC,QAAQ,EAACC,QAAQ,EAAC;IACvC;IACA;IACAC,cAAc,CAACC,OAAO,CAAC,mBAAmB,EAACH,QAAQ,CAAC;EACxD;EACAI,MAAM,GAAE;IACJF,cAAc,CAACG,UAAU,CAAC,mBAAmB,CAAC;EAClD;EACAC,cAAc,GAAE;IACZ,IAAIC,IAAI,GAAGL,cAAc,CAACM,OAAO,CAAC,mBAAmB,CAAC;IACtD,IAAGD,IAAI,KAAG,IAAI,EAAC;MAAC,OAAO,KAAK;IAAA,CAAC,MACzB;MAAC,OAAO,IAAI;IAAA;EACpB;AACJ;AACA,eAAe,IAAIT,qBAAqB,EAAE"},"metadata":{},"sourceType":"module"}